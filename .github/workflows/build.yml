name: Build Emacs with MSYS2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          path-type: inherit
          install: > 
            base-devel
            autoconf
            autogen
            automake
            automake-wrapper
            git
            libidn-devel
            libltdl
            libnettle-devel
            libopenssl
            libp11-kit-devel
            libtasn1-devel
            libunistring
            make
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-bzip2
            mingw-w64-ucrt-x86_64-cairo
            mingw-w64-ucrt-x86_64-crt-git
            mingw-w64-ucrt-x86_64-expat
            mingw-w64-ucrt-x86_64-fontconfig
            mingw-w64-ucrt-x86_64-freetype
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gcc-libs
            mingw-w64-ucrt-x86_64-gdk-pixbuf2
            mingw-w64-ucrt-x86_64-gettext
            mingw-w64-ucrt-x86_64-giflib
            mingw-w64-ucrt-x86_64-glib2
            mingw-w64-ucrt-x86_64-gmp
            mingw-w64-ucrt-x86_64-gnutls
            mingw-w64-ucrt-x86_64-harfbuzz
            mingw-w64-ucrt-x86_64-headers-git
            mingw-w64-ucrt-x86_64-imagemagick
            mingw-w64-ucrt-x86_64-jansson
            mingw-w64-ucrt-x86_64-libgccjit
            mingw-w64-ucrt-x86_64-libiconv
            mingw-w64-ucrt-x86_64-libidn2
            mingw-w64-ucrt-x86_64-libjpeg-turbo
            mingw-w64-ucrt-x86_64-libpng
            mingw-w64-ucrt-x86_64-librsvg
            mingw-w64-ucrt-x86_64-sqlite3
            mingw-w64-ucrt-x86_64-tree-sitter
            mingw-w64-ucrt-x86_64-libtiff
            mingw-w64-ucrt-x86_64-libunistring
            mingw-w64-ucrt-x86_64-libxml2
            mingw-w64-ucrt-x86_64-nettle
            mingw-w64-ucrt-x86_64-p11-kit
            mingw-w64-ucrt-x86_64-winpthreads
            mingw-w64-ucrt-x86_64-xpm-nox
            mingw-w64-ucrt-x86_64-xz
            mingw-w64-ucrt-x86_64-zlib
            mingw-w64-ucrt-x86_64-jbigkit
            pkgconf
            zip
            texinfo

      - name: Clone Emacs repository and get version info
        shell: msys2 {0}
        run: |
          git config --global core.autocrlf false
          git clone https://github.com/emacs-mirror/emacs --depth 1
          cd emacs
          version=$(grep AC_INIT configure.ac | awk -F',' '{ gsub("[ \\[\\]]","",$2); print $2 }')
          commit=$(git rev-parse HEAD)
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "COMMIT=$commit" >> $GITHUB_ENV
          
      - name: Build Emacs
        shell: msys2 {0}
        run: |
          cd emacs
          ./autogen.sh
          mkdir build
          cd build
          target=$(cygpath -u "${{ github.workspace }}\build\emacs")
          ../configure prefix=$target \
              --with-native-compilation=aot \
              --with-gnutls \
              --without-dbus \
              --without-pop \
              --with-xpm \
              --with-imagemagick \
              --with-tree-sitter
          make bootstrap
          make install

      - name: Verify Emacs installation
        shell: msys2 {0}
        run: |
          ls -l

      - name: Package Emacs
        shell: msys2 {0}
        run: |
          cd $(cygpath -u "${{ github.workspace }}\build\emacs")
          mkdir -p $(cygpath -u "${{ github.workspace }}\pkgs")
          zip -r ../../pkgs/emacs-$VERSION-$COMMIT.zip *
          cd $(cygpath -u "${{ github.workspace }}")
          mkdir artifact
          cp pkgs/emacs-$VERSION-$COMMIT.zip artifact/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: emacs-package
          path: ./artifact/

      - name: Create release
        id: create_release
        uses: ncipollo/release-action@main
        with:
          name: Release for Emacs and Doom Emacs
          allowUpdates: true
          prerelease: false
          tag: v1.0.0
          replacesArtifacts: true
          token: ${{ secrets.TOKEN }}
          artifacts: |
            ./emacs-$VERSION-$COMMIT.zip

  emacs-dotfile-build:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Download Emacs binary from previous job
        uses: actions/download-artifact@v3
        with:
          name: emacs-package

      - name: Uncompress Emacs binary
        run: |
          unzip emacs-*.zip -d emacs-bin
          dir
          dir emacs-bin

      - name: Clone my doom emacs configuration
        run: |
          git clone --depth 1 https://github.com/doomemacs/doomemacs.git $HOME\.emacs.d
          git clone --depth 1 https://github.com/MoozIiSP/doom-emacs-private.git $HOME\.doom.d

      - name: Disable some features
        run: |
          cd $HOME
          sed -i 's/(emoji/;;(emoji/g' .doom.d\init.el

      - name: Configure ~/.emacs.d/bin/doom
        run: |
          $Env:Path += ";${{ github.workspace }}\emacs-bin\bin"
          $Env:Path += ";$HOME\.emacs.d\bin"
          $Env:DOOMDIR = "$HOME\.doom.d"
          & doom install --force

      - name: Download all-the-icons
        run: |
          git clone https://github.com/domtronn/all-the-icons.el
          mkdir -p $HOME/.emacs.d/.local/share/fonts
          cp -r all-the-icons.el/fonts/* $HOME/.emacs.d/.local/share/fonts

      - name: Packaging all files
        run: |
          cd $HOME
          tar czf doomemacs-dotfiles.tgz .emacs.d .doom.d
          mkdir -p ${{ github.workspace }}\artifact
          mv doomemacs-dotfiles.tgz ${{ github.workspace }}\artifact\

      - name: Upload doomemacs-dotfiles.tgz
        uses: actions/upload-artifact@v3
        with:
          name: doomemacs-dotfiles
          path: ./artifact/
          
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@main
        with:
          name: Release for Emacs and Doom Emacs
          allowUpdates: true
          prerelease: false
          tag: v1.0.0
          replacesArtifacts: true
          token: ${{ secrets.TOKEN }}
          artifacts: |
            ./doomemacs-dotfiles.tgz
